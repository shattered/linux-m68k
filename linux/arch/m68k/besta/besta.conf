/*
 * besta/besta.conf -- To specify Besta/VME drivers etc.
 *                     This file is included by besta/VME.c up to 3 times.
 *
 * Copyright 1996, 1997	    Dmitry K. Butskoy
 *			    <buc@citadel.stu.neva.ru>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2, or (at your option) any
 * later version.
 *
 */
/*
 * 	Usage:
 *
 *	    base ("name", vector, level) 
 *		-- specify interrupt vector/level for appropriate device.
 *		   Normaly may be omitted, vector/level`s would be generated
 *		   automatically.
 *
 *	    driver ("name", major, init_funct)
 *		-- specify pseudo-device driver to include into kernel.
 *		   Majors may be pre-defined in besta.h, which included
 *		   by VME.c before this file is scanned.
 *		   void (*init_funct) (const char *name, int major); -
 *		   pointer to initialization function.
 *
 *	    VME ("name", VME_base_address, vector, level, major, init_funct)
 *		-- specify VME-bus-device driver.
 *		   vector, level, major -- likewise,
 *		   void (*init_funct) (struct VME_board *VME, int on_off); -
 *		   initialization routine, on_off: 0 - init, 1 - deinit.
 *		   VME_base_address would be included in VME_board struct
 *		   as `addr' field (see besta.h for details).
 *		   Set vector = -1 to generate it automatically (normal way).
 *		   
 */

#if 0	/*  normaly not needed, example for hcpu30 only  */
base ("xclk", 0x49, 6)
base ("xdus", 0x44, 4)
base ("xdus1", 0x45, 4)
base ("xscsi", 0x46, 4)
base ("xfd", 0x47, 4)
base ("xcen", 0x4a, 3)
base ("xlan", 0x87, 4)
#endif

/*
 * pseudo-device drivers (no hardware needed) 
 */
driver ("ios", IOS_MAJOR, ios_init)
driver ("sockm", SOCKM_MAJOR, sockm_init)
driver ("clone", CLONE_MAJOR, clone_init)
driver ("stream", INET_STREAM_MAJOR, stream_init)
driver ("stream", INET_DGRAM_MAJOR, stream_init)
driver ("stream", UNIX_STREAM_MAJOR, stream_init)
driver ("stream", UNIX_DGRAM_MAJOR, stream_init)


/*
 * VME-device drivers.
 * It is better to include all possible addresses to scan.
 */
/*  HCWW8 board  */
VME ("hcww", 0xfc9fff00, -1, 3, HCEN_MAJOR, hcww_init)          /* 0x8c  */
VME ("hcww", 0xfc9ffe00, -1, 3, HCEN_MAJOR, hcww_init)          /* 0x8d  */
VME ("hcww", 0xfc9ffd00, -1, 3, HCEN_MAJOR, hcww_init)
VME ("hcww", 0xfc9ffc00, -1, 3, HCEN_MAJOR, hcww_init)
VME ("hcww", 0xfc9ffb00, -1, 3, HCEN_MAJOR, hcww_init)
VME ("hcww", 0xfc9ffa00, -1, 3, HCEN_MAJOR, hcww_init)
VME ("hcww", 0xfc9ff900, -1, 3, HCEN_MAJOR, hcww_init)
VME ("hcww", 0xfc9ff800, -1, 3, HCEN_MAJOR, hcww_init)

/*  CWW8 board (isio)  */
VME ("cww",  0xfc960000, -1, 2, 0,          cww_init)           /* 0x60  */
VME ("cww",  0xfc980000, -1, 2, 0,          cww_init)
VME ("cww",  0xfc9a0000, -1, 2, 0,          cww_init)
VME ("cww",  0xfc9c0000, -1, 2, 0,          cww_init)
VME ("cww",  0xfc940000, -1, 2, 0,          cww_init)
VME ("cww",  0xfc920000, -1, 2, 0,          cww_init)

/*  MD10 board (exotic)  */
VME ("md10", 0xfcffff00, 0,    0, MD10_MAJOR, md10_init)
VME ("md10", 0xfcfffe00, 0,    0, MD10_MAJOR, md10_init)

#ifndef CONFIG_HCPU30
/*  CWN and LAN usually needed for CPxx configuration only.  */
VME ("cwn",  0xfca00000, -1, 4, 0,          cwn_init)
VME ("lance",0xfc700000, -1, 4, 0,          lance_init)
#endif
